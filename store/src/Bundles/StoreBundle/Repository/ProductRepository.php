<?php

namespace Bundles\StoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function filterBrend($category , $brends = null , $fasilities = null)
    {
       //dump($brends);
        $qb = $this->createQueryBuilder('p');

        $qb->where('p.category = :category')
            ->setParameter('category', $category);

        if($brends){
            foreach($brends as $brend){
                $qb->andWhere('p.brend IN (:brends)')
                    ->setParameter('brends', $brends);

            }
        }

        /*if($fasilities){
            foreach($fasilities as $fas){
                $qb->andWhere(':fas MEMBER OF p.fasilities')
                   ->setParameter('fas', $fas);
            }
        }*/

        return $qb->getQuery()->getResult();
    }

    public function filterParam($category,$params)
    {
        //dump($brends);
        $qb = $this->createQueryBuilder('p');

        $qb->where('p.category = :category')
            ->setParameter('category', $category);

        foreach($params as $k=>$param){
                $qb->andWhere('p.brend IN (:brends)')
                    ->setParameter('brends', $brends);

            }
        /*if($fasilities){
            foreach($fasilities as $fas){
                $qb->andWhere(':fas MEMBER OF p.fasilities')
                   ->setParameter('fas', $fas);
            }
        }*/

        return $qb->getQuery()->getResult();
    }


    public function Hello()
    {
        return "hello";
    }

}
